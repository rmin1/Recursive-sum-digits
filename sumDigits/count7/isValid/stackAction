# C-
#include<iostream>
#include<stack>
#include<string>
using namespace std;

int sumDigits(int n);
int count7(int n);
bool isValid(char a, char b);
bool stackAction(string str);

int main()
{
    int n;

    cout << "Enter a positive integer: ";
    cin >> n;

    cout << "Sum =  " << sumDigits(n) << endl;

/////////count7
    cout << "There is/are (" << count7(n) << ") 7's." << endl;
//////////isValid

	string userC;

	cout << "Enter bracket characters:  " << endl;

	cin >> userC;

	if(stackAction(userC))
		{
		    cout << "True." << endl;
		}
	else
		cout << "Error." << endl;

    return 0;
}
/////////functions////////////////////////////
int sumDigits(int n)
{
    if (n > 0)
    {
        return n + sumDigits(n - 1);
    }

     return 0;
}
//////////count7 function
int count7(int n)
{
	if (n == 0)
    {
        return 0;
    }

	if (n % 10 == 7)
    {
        return 1 + count7(n / 10);
    }
    return count7(n / 10);
}
/////////////////isValid
bool isValid(char a, char b)
{
	if (a == '(' && b == ')')
        {
            return true;
        }
	else if (a == '{' && b == '}')
        {
            return true;
        }
	else if (a == '[' && b == ']')
        {
            return true;
        }
	return false;
}

bool stackAction(string str)
{
    stack<char>  S;
	for (int i = 0; i < str.length(); i++)
	{
		if (str[i] == '(' || str[i] == '{' || str[i] == '[')
			S.push (str[i]);

		else if (str[i] == ')' || str[i] == '}' || str[i] == ']')
		{
			if(S.empty() || !isValid(S.top(),str[i]))
				return false;
			else
				S.pop();
		}
	}
	return S.empty() ? true:false;
}
