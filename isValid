//Rachel 
//Determining if input character string is valid
#include<iostream>
#include<stack>
#include<string>
using namespace std;

bool isValid(char a, char b);
bool stackAction(string str);

int main()
{

	string userC;

	cout << "Enter any bracket characters: " << endl;
	cout << "(If characters are [] or () = true, if { or [)] = error/false)" << endl;

	cin >> userC;

	if(stackAction(userC))
		{
		    cout << "True." << endl;
		}
	else
		cout << "Error." << endl;

    return 0;
}


bool isValid(char a, char b)
{
	if (a == '(' && b == ')')
        {
            return true;
        }
	else if (a == '{' && b == '}')
        {
            return true;
        }
	else if (a == '[' && b == ']')
        {
            return true;
        }
	return false;
}

bool stackAction(string str)
{
    stack<char>  S;
	for (int i = 0; i < str.length(); i++)
	{
		if (str[i] == '(' || str[i] == '{' || str[i] == '[')
			S.push (str[i]);

		else if (str[i] == ')' || str[i] == '}' || str[i] == ']')
		{
			if(S.empty() || !isValid(S.top(),str[i]))
				return false;
			else
				S.pop();
		}
	}
	return S.empty() ? true:false;
}

