//create binary tree, return level order traversal
#include <iostream>
#include<stack>
#include<vector>
#include <queue>
using namespace std;


struct Nodes
{
    int item;
    struct Nodes *left;
    struct Nodes *right;
};

void print (Nodes *root)
{

    if (root == NULL)
    {
        return;
    }

    queue<Nodes *> a;
    a.push(root);

    while (1)
    {

        int nodeCount = a.size();

        if (nodeCount == 0)
        {
            break;
        }

        while (nodeCount > 0)
        {
            Nodes *Nodes = a.front();

            cout << Nodes->item << " ";
            a.pop();

            if (Nodes->left != NULL)
            {
                a.push(Nodes->left);
            }

            if (Nodes->right != NULL)
            {
                a.push(Nodes->right);
            }

            nodeCount--;

        }
        cout << endl;
    }
}



Nodes* newNode(int item)
{
    Nodes *temp = new Nodes;
    temp->item = item;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
}


int main()
{

cout << "Question 2:" << endl;


    Nodes *root = newNode(3);
    root->left = newNode(9);
    root->right = newNode(20);
    root->left->left = newNode(NULL);
    root->left->right = newNode(NULL);
    root->right->right = newNode(15);
    root->right->left = newNode(7);

    cout << endl;
    print(root);
    cout << endl;
