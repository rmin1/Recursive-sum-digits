#include <vector>
#include <stdlib.h>
#include <iostream>
#include <iomanip>
#include <time.h>
#include <iterator>
#include <algorithm>

const int SIZE = 5;
unsigned int seed = (unsigned int) time (0);

using namespace std;

double random (unsigned int &seed);
void print_vector (const vector <int> &v);
void print_vector (vector <int>::iterator b, vector <int>::iterator e);

int main()

{
    int array[SIZE] = {1, 2, 3, 4, 5};
    vector <int> v, w;
    vector <int>::iterator beginning, ending, it;



    cout << "The vector elements are : ";
    for (it = v.begin(); it < v.end(); it++)
        cout << *it << " ";


    beginning = it;
    cout << "beginning = "<<*beginning << endl;
    cout << "advance iterator by 1: ";
    advance (it, 1);

    ending = it;
    cout << "ending = "<<*ending << endl;
    cout << "subvector [b:e) of vector v before sorting"<<endl;
    print_vector (beginning, ending);

    insert_iterator (beginning, ending);
    print_vector (beginning, ending);


    return 0;
}


double random (unsigned int &seed)
{
    const int MODULUS = 15749;
    const int MULTIPLIER = 69069;
    const int INCREMENT = 1;
    seed = ((MULTIPLIER * seed) + INCREMENT) % MODULUS;
    return double(seed) / double(MODULUS);
}

void print_vector (const vector <int> &v)
{
    for (int i = 0; i < v.size(); ++i)
        cout << setw(3) << v[i];
    cout << endl;
}

void print_vector (vector<int>::iterator b, vector<int>::iterator e)
{
    for (vector <int>::iterator i = b; i < e; ++i)
        cout << setw(3)<<*i;
    cout << endl;
}
